<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.modules.permission.dao.SysUserRoleDao">
    <!--表名-->
    <sql id="table_name">sys_user_role</sql>

    <!--插入字段集合-->
    <sql id="Base_Column_List">
        id, 
        user_id, 
        role_id, 
        is_valid, 
        create_date, 
        create_user, 
        update_date, 
        update_user
    </sql>
    <!--查询字段集合-->
    <sql id="Base_Column_List_AsType">
        id as id, 
        user_id as userId, 
        role_id as roleId, 
        is_valid as isValid, 
        create_date as createDate, 
        create_user as createUser, 
        update_date as updateDate, 
        update_user as updateUser
    </sql>

    <!-- 增加一个实体 -->
    <insert id="insert" parameterType="com.demo.modules.permission.entity.SysUserRole">
        <!-- 针对mysql使用-->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            select LAST_INSERT_ID()
        </selectKey>
        insert into <include refid="table_name" />
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="isValid != null">
                is_valid,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="updateUser != null">
                update_user
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId},
            </if>
            <if test="roleId != null">
                #{roleId},
            </if>
            <if test="isValid != null">
                #{isValid},
            </if>
            <if test="createDate != null">
                #{createDate},
            </if>
            <if test="createUser != null">
                #{createUser},
            </if>
            <if test="updateDate != null">
                #{updateDate},
            </if>
            <if test="updateUser != null">
                #{updateUser}
            </if>
        </trim>
    </insert>

    <!-- 根据主键删除一个实体 -->
    <delete id="delete" parameterType="java.lang.Long">
        delete from <include refid="table_name" />
        where id = #{id}
    </delete>

    <!-- 更新一个实体 -->
    <update id="update" parameterType="com.demo.modules.permission.entity.SysUserRole">
        update <include refid="table_name" />
        set
        <if test="userId != null">
            user_id = #{userId},
        </if>
        <if test="roleId != null">
            role_id = #{roleId},
        </if>
        <if test="isValid != null">
            is_valid = #{isValid},
        </if>
        <if test="createDate != null">
            create_date = #{createDate},
        </if>
        <if test="createUser != null">
            create_user = #{createUser},
        </if>
        <if test="updateDate != null">
            update_date = #{updateDate},
        </if>
        <if test="updateUser != null">
            update_user = #{updateUser}
        </if>
        where id = #{id}
    </update>

    <!-- 根据主键查询一个实体 -->
    <select id="queryOne" parameterType="java.lang.Long"  resultType="com.demo.modules.permission.entity.SysUserRole">
        select
        <include refid="Base_Column_List_AsType" />
        from <include refid="table_name" />
        where id = #{id}
    </select>

    <!-- 查询全部 -->
    <select id="queryAll" resultType="com.demo.modules.permission.entity.SysUserRole">
        select
        <include refid="Base_Column_List_AsType" />
        from <include refid="table_name" />
        where is_valid = '1'
    </select>

    <!-- 根据字段查询 带分页 -->
    <select id="queryByFieldsAndPage" resultType="com.demo.modules.permission.entity.SysUserRole">
        select
        <include refid="Base_Column_List_AsType" />
        from <include refid="table_name" />
        where is_valid = '1'
        <if test="id != null">
            and id = #{id}
        </if>
        <if test="userId != null">
            and user_id = #{userId}
        </if>
        <if test="roleId != null">
            and role_id = #{roleId}
        </if>
        <if test="isValid != null">
            and is_valid = #{isValid}
        </if>
        <if test="createDate != null">
            and create_date = #{createDate}
        </if>
        <if test="createUser != null">
            and create_user = #{createUser}
        </if>
        <if test="updateDate != null">
            and update_date = #{updateDate}
        </if>
        <if test="updateUser != null">
            and update_user = #{updateUser}
        </if>
        <if test="SysUserRole != null">
            limit #{pageBean.limitOffset} , #{pageBean.pageSize}
        </if>
    </select>

    <!-- 根据用户id获取角色ids -->
    <select id="listRolesByUserId" resultType="java.lang.Long">
        select role_id as roleId
        from <include refid="table_name"></include>
        where is_valid = 1
        and user_id = #{userId}
    </select>

    <!-- 根据角色id和用户的id查询sysUserRole(逻辑有效无效都查) -->
    <select id="listUserRoleByUserIdAndRoleId" resultType="com.demo.modules.permission.entity.SysUserRole">
        select <include refid="Base_Column_List_AsType"></include>
        from <include refid="table_name"></include>
        where user_id = #{userId}
        and role_id = #{roleId}
    </select>

    <!-- 根据用户ids删除用户角色的关联关系 -->
    <update id="batchRemoveUserRoles">
        update <include refid="table_name"></include>
        set
        <trim suffixOverrides=",">
            is_valid = 0,
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser},
            </if>
        </trim>
        <where>
            <if test="userIds != null and userIds.length > 0">
                user_id in
                <foreach collection="userIds" item="userId" open="(" close=")" separator=",">
                    #{userId}
                </foreach>
            </if>
            <if test="roleIds != null and roleIds.length > 0">
                role_id in
                <foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
                    #{roleId}
                </foreach>
            </if>
        </where>
    </update>
</mapper>

